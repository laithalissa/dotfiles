diff --git a/home/.aliases b/home/.aliases
index 01a7dff..2ab0faf 100644
--- a/home/.aliases
+++ b/home/.aliases
@@ -21,7 +21,6 @@ compdef kubecolor=kubectl
 
 # Disable to reduce startup time when using mobaxterm
 # alias vim=vimx
-alias vim=nvim
 
 ### Utils ###
 # Find a file within the current directory
diff --git a/home/.tmux.conf b/home/.tmux.conf
index 31b7934..c901b45 100644
--- a/home/.tmux.conf
+++ b/home/.tmux.conf
@@ -5,7 +5,11 @@
 # UTF-8 support
 #set -g utf8 on
 
-set-option -g default-shell /bin/zsh
+#set-option -g default-shell /bin/zsh
+set-option -g default-shell /home/linuxbrew/.linuxbrew/bin/fish
+# Inherit kubeconfig
+# set-option -ga update-environment ' KUBECONFIG GPG_TTY'
+
 ### User Interaction
 # remap prefix to C-t, C-b clashes with emacs keybinding. Duh!
 #unbind -a C-b
@@ -16,7 +20,7 @@ set -g mouse on
 
 # Use vim keybindings in copy mode
 # XXX: Disabled for clipboard experiments
-# set -g mode-keys vi
+set -g mode-keys vi
 
 # Setup 'v' to begin selection as in Vim
 #bind-key -t vi-copy v begin-selection
@@ -48,7 +52,6 @@ set-option -g display-time 4000
 # set -g default-terminal "xterm"
 
 
-#set -g mouse on
 unbind -T copy-mode-vi MouseDragEnd1Pane
 bind P paste-buffer
 #bind-key -T vi-copy 'v' send-keys -X begin-selection
@@ -64,6 +67,9 @@ set-option -g history-limit 10000
 # Move windows left/right with ctrl+shift+ arrow
 bind-key -n C-S-Left swap-window -t -1
 bind-key -n C-S-Right swap-window -t +1
+# Ctrl alt lef
+bind-key -n C-M-Left previous-window 
+bind-key -n C-M-Right next-window
 
 # Experimental, from: https://unix.stackexchange.com/questions/18006/can-mouse-wheel-scrolling-work-in-a-screen-session
 set -g terminal-overrides 'xterm*:smcup@:rmcup@'
@@ -72,19 +78,8 @@ set -g terminal-overrides 'xterm*:smcup@:rmcup@'
 bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
 bind-key -n C-S-Right swap-window -t +1\; select-window -t +1
 
-# Mouse support https://github.com/tmux/tmux/issues/140#issuecomment-474341833
-set -g mouse on
-# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
-unbind-key -T copy-mode MouseDragEnd2Pane
-unbind-key -T copy-mode-vi MouseDragEnd1Pane
-# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
-# let single click do selection clearing for us.
-bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection
-# this line changes the default binding of MouseDrag1Pane, the only difference
-# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
-# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
-bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'
-
+# This allows me to send an Esc without a escape-time delay
+bind-key -T root      C-g send-keys Escape
 
 ### TMUX plugin manager https://github.com/tmux-plugins/tpm
 # List of plugins
@@ -97,19 +92,17 @@ set -g @resurrect-capture-pane-contents 'on'
 # Exeprimental: copy to clipboard
 set -g @plugin 'tmux-plugins/tmux-yank'
 
+# Experimental: Notification
+set -g @plugin 'ChanderG/tmux-notify'
 
 # Restore tmux session automatically when tmux is started
 set -g @continuum-restore 'on'
+
+# Run tmux with systemd https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/systemd_details.md
+set -g @continuum-boot 'on'
 # Themes
 set -g @plugin "arcticicestudio/nord-tmux"
 
-
-# Nikolai said to try this
-# set -g default-terminal "tmux-256color"
-# set -ga terminal-overrides ",*256col*:Tc"
-# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
-# set-environment -g COLORTERM "truecolor"
-
 ## Save tux sessions, continuum needs resurrect to work
 set -g @plugin 'tmux-plugins/tmux-continuum'
 set -g @plugin 'tmux-plugins/tmux-resurrect'
diff --git a/home/.zprofile b/home/.zprofile
index 0b66d4d..18b0475 100644
--- a/home/.zprofile
+++ b/home/.zprofile
@@ -9,11 +9,11 @@ export GO_BINS="$HOME/go/bin"
 export GO_PATH="$HOME/go/"
 
 #export PATH=$PATH:$SCRIPTS:$USER_BINARIES
+export PATH=$SCRIPTS:$USER_BINARIES:$GO_BINS:$PATH
+[[ -f "$SCRIPTS/get-paths" ]] && export PATH=$PATH:`$SCRIPTS/get-paths`
+[[ -f "$SCRIPTS/functions/source-me" ]] && source "$SCRIPTS/functions/source-me"
 
-export BREW_PREFIX='/opt/homebrew'
-export PATH="/opt/homebrew/opt/python@3.9/libexec/bin:$PATH"
-# GNU coreutils
-export PATH="$BREW_PREFIX/bin:$PATH"
+export BREW_PREFIX='/opt/homebrew/opt'
 # GNU coreutils
 export PATH="$BREW_PREFIX/bin:$PATH"
 #export PATH="$BREW_PREFIX/opt/grep/libexec/gnubin:$PATH"
@@ -33,11 +33,6 @@ export PATH="$BREW_PREFIX/opt/gnu-sed/libexec/gnubin:$PATH"
 export PATH="${PATH}:${SCRIPTS}:${USER_BINARIES}"
 [[ -f "$SCRIPTS/get-paths" ]] && export PATH=$PATH:$($SCRIPTS/get-paths)
 export PATH="${PATH}:${HOME}/npm/bin"
-# nvim
-export PATH="/opt/homebrew/Cellar/neovim/0.6.1/bin:$PATH"
-
-export PATH=$SCRIPTS:$USER_BINARIES:$GO_BINS:$PATH
-[[ -f "$SCRIPTS/get-paths" ]] && export PATH=$PATH:`$SCRIPTS/get-paths`
 #export NODE_PATH="$NODE_PATH:$HOME/npm/lib/node_modules"
 
 #export DOTFILES="$CODE_DIR/dotfiles/home"
@@ -60,24 +55,16 @@ export WHITE=$(echo -en '\033[01;37m')
 export BOLD=$(echo -en '\e[31m')
 export RESET_COLOUR=$(echo -en '\033[0m')
 
 # Virtualenv
 export WORKON_HOME=$HOME/.virtualenvs
 export PROJECT_HOME=$HOME/code
 export VIRTUALENVWRAPPER_PYTHON=/opt/homebrew/bin/python3
-source /opt/homebrew/bin/virtualenvwrapper.sh
+# source /opt/homebrew/bin/virtualenvwrapper.sh
 
 # Krew: Package manager for k8s
 export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
-
-#export PATH=":$PATH"
-#export PATH="$HOME/.poetry/bin:$PATH"
 
 [[ -f "$HOME/vars.sh" ]] && . "$HOME/vars.sh"
 # [[ -f /lxhome/alissala/.virtualenvs/w/bin/activate ]] && . /lxhome/alissala/.virtualenvs/w/bin/activate
 [[ -f "$HOME/bin/z.sh" ]] && . "$HOME/bin/z.sh"
-export PATH="/opt/homebrew/opt/openssl@1.1/bin:$PATH"
-export GOBIN=~/go/bin/
+. "$HOME/.cargo/env"
diff --git a/home/.zshrc b/home/.zshrc
index 98bd909..04548fb 100644
--- a/home/.zshrc
+++ b/home/.zshrc
@@ -1,10 +1,14 @@
 # Uncomment this and zprof at the end to profile
-# zmodload zsh/zprof
-#
-# Increase max history
-export HISTFILESIZE=1000000000
-export HISTSIZE=1000000000
-setopt INC_APPEND_HISTORY
+#zmodload zsh/zprof
+# now, simply add these two lines in your ~/.zshrc
+
+## Plugin manager
+# source antidote
+source ${ZDOTDIR:-~}/.antidote/antidote.zsh
+
+# initialize plugins statically with ${ZDOTDIR:-~}/.zsh_plugins.txt
+antidote load
+## End Plugin manager
 
 ## Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
 ## Initialization code that may require console input (password prompts, [y/n]
@@ -13,6 +17,9 @@ if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]
   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
 fi
 
+# If you come from bash you might have to change your $PATH.
+# export PATH=$HOME/bin:/usr/local/bin:$PATH
+
 # Path to your oh-my-zsh installation.
 export ZSH=$HOME/.oh-my-zsh
 
@@ -21,18 +28,9 @@ include () {
   [[ -f "$1" ]] && source "$1"
 }
 
-# This is intesive so we disable it and make it run once per day
-skip_global_compinit=1
-# For zsh-completions
-# autoload -U compinit && compinit
-#
-# Only check zcormpdump once per day (cos slow)
-# https://medium.com/@dannysmith/little-thing-2-speeding-up-zsh-f1860390f92
-autoload -Uz compinit
-for dump in ~/.zcompdump(N.mh+24); do
-  compinit
-done
-compinit -C
+# XXX: Disable this to attempt to fix tmux clors
+#export TERM="xterm-256color"
+
 
 # Uncomment the following line to use hyphen-insensitive completion. Case
 # sensitive completion must be off. _ and - will be interchangeable.
@@ -41,11 +39,13 @@ ENABLE_CORRECTION='false'
 
 plugins=(
   aws
-#  colored-man-pages
+  colored-man-pages
   colorize
   common-aliases
 # Causing new shells to hang??
-#  emoji
+#  docker
+#  docker-compose
+  emoji
   git
   kubectl
   terraform
@@ -55,14 +55,13 @@ plugins=(
 #  zsh-kubectl-prompt
 #  zsh-syntax-highlighting
 #  zshmarks
-  zsh-autosuggestions
 )
 
 # ZSH_THEME is sourced from here, so that it encapsulate theme specific config
-include $HOME/.zshtheme
+# include $HOME/.zshtheme
 # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
 [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
-include ~/powerlevel10k/powerlevel10k.zsh-theme
+#include ~/powerlevel10k/powerlevel10k.zsh-theme
 
 # This should give us WORK_NAMESPACE
 #include ~/.env_namespace
@@ -73,23 +72,21 @@ include ~/powerlevel10k/powerlevel10k.zsh-theme
 source $ZSH/oh-my-zsh.sh
 # powerlevel9k's font-awesome sets LC_ALL to '', which breaks perl :/
 export LC_ALL="$LANGUAGE"
-# Turn off clippy-esque correction suggestions
-unsetopt correct_all
 
-# Load personal aliases
+# Load Laithisms
 include "$DOTFILES/.aliases"
-# Tracked secrets
+
+# Nasty fat hobbitsis keeps his secret keys here
 include "$DOTFILES/.secrets"
-# Untracked secrets
 include "$HOME/.secrets"
 
-# Util functions
+# Util function
 include "$SCRIPTS/functions/source-me"
 
 # Docker wrapped tools
-#include "$CODE/docker/source-me"
+include "$CODE/docker/source-me"
+
 
-# Function detect the current system (used for deciding editors etc)
 os-name() {
   if [[ "$OSTYPE" == "linux-gnu" ]]; then
     echo 'Linux'
@@ -103,54 +100,71 @@ os-name() {
 }
 local os=$(os-name)
 
-# Select Editor based on os/shell type
-export EDITOR='vim'
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   case $os in
     Linux)
-      # export EDITOR='gvim'
-      export EDITOR='nvim'
+      export EDITOR='gvim'
       # vimx Starts gvim in "Vi" mode similar to "vim"
       # but with additional features like xterm clipboard support
       alias vim=vimx
       ;;
-    Mac)
-      export EDITOR='nvim'
-	  ;;
+    Mac)   export EDITOR='mvim';;
   esac
 fi
+export EDITOR='vim'
+
+# Preferred editor for local and remote sessions
+if [[ -n $SSH_CONNECTION ]]; then
+ export EDITOR='vim'
+fi
 
-# Finally include zshrc_personal
 include $HOME/.zshrc_personal
 
+# Turn off clippy-esque correction suggestions
+unsetopt correct_all
 
+# For zsh-completions
+# autoload -U compinit && compinit
 # For kubectl completion
-# This seems to be slow!!!
-# source <(kubectl completion zsh)
-# compdef kubecolor=kubectl
+source <(kubectl completion zsh)
 
 
 ###
 # Experimental section, should be sorted before committing
 ###
 
+#export WORKON_HOME=$HOME/.virtualenvs
+#export PROJECT_HOME=$HOME/Devel
+#source /usr/local/bin/virtualenvwrapper.sh
+
 # Tmux plugin for omz
 ZSH_TMUX_AUTOSTART=true
+
+# alias tmux="tmux -2"
+# Trying to fix path issue
+export PATH="/lxhome/alissala/bin/:$PATH"
+
+# NVM paths
+export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
+[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
+
 [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
 
-# Reset the zsh promptm can't remember why
-#TRAPWINCH() {
-#  zle && { zle reset-prompt; zle -R }
-#}
 
-# Company related functiosn
+TRAPWINCH() {
+  zle && { zle reset-prompt; zle -R }
+}
+
+#zprof
 
 # Flux completions
-# . <(flux completion zsh)
+. <(flux completion zsh)
+
+compdef kubecolor=kubectl
 
-bindkey "^[^[[D" backward-word
-bindkey "^[^[[C" forward-word
-# zprof
+# Hishtory Config:
+export PATH="$PATH:/home/laith/.hishtory"
+source /home/laith/.hishtory/config.zsh
